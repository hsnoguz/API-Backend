using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DAL.Migrations
{
    public partial class RefreshToken16 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "TokenId",
                table: "Users",
                type: "int",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 116, 14, 134, 40, 81, 77, 231, 72, 224, 199, 13, 156, 242, 240, 99, 113, 19, 158, 149, 161, 156, 64, 129, 29, 184, 255, 248, 162, 64, 151, 212, 68, 85, 164, 243, 101, 201, 109, 139, 120, 124, 244, 66, 249, 57, 142, 69, 165, 157, 205, 19, 2, 28, 8, 248, 132, 150, 30, 160, 80, 30, 96, 222, 136 }, new byte[] { 37, 24, 112, 151, 71, 199, 35, 245, 214, 113, 90, 187, 134, 49, 49, 175, 92, 20, 178, 69, 185, 170, 233, 208, 168, 40, 27, 72, 6, 27, 120, 195, 202, 58, 17, 228, 135, 199, 111, 59, 174, 255, 85, 236, 91, 61, 13, 121, 251, 28, 69, 41, 53, 251, 105, 9, 28, 61, 179, 245, 116, 87, 208, 211, 52, 177, 238, 163, 179, 56, 112, 185, 195, 127, 39, 79, 52, 237, 183, 31, 13, 38, 24, 32, 229, 108, 204, 81, 45, 192, 85, 187, 141, 27, 149, 61, 233, 102, 59, 183, 148, 18, 252, 47, 68, 86, 57, 217, 109, 252, 210, 17, 118, 194, 101, 229, 108, 84, 129, 206, 234, 254, 48, 238, 254, 100, 57, 13 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "TokenId",
                table: "Users");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 252, 168, 115, 145, 86, 58, 117, 173, 155, 7, 171, 127, 218, 175, 116, 220, 210, 41, 98, 113, 209, 249, 217, 207, 106, 229, 199, 198, 179, 24, 165, 137, 238, 157, 70, 221, 20, 178, 93, 115, 168, 169, 175, 217, 88, 133, 180, 141, 69, 42, 234, 0, 224, 98, 195, 219, 75, 126, 229, 21, 164, 255, 2, 214 }, new byte[] { 10, 10, 42, 84, 132, 250, 141, 155, 132, 24, 234, 114, 241, 120, 214, 166, 100, 32, 125, 201, 11, 131, 73, 183, 11, 88, 40, 215, 152, 142, 33, 204, 162, 49, 234, 6, 104, 116, 71, 239, 205, 246, 231, 32, 46, 227, 95, 87, 233, 109, 40, 236, 169, 156, 85, 210, 187, 253, 119, 223, 202, 151, 166, 70, 6, 213, 93, 220, 149, 89, 156, 90, 14, 54, 29, 90, 47, 77, 211, 90, 76, 87, 106, 94, 110, 148, 87, 94, 201, 101, 206, 247, 47, 212, 194, 103, 135, 154, 175, 221, 60, 122, 218, 40, 249, 97, 244, 227, 27, 36, 85, 37, 146, 24, 242, 206, 204, 136, 46, 239, 208, 211, 142, 44, 107, 120, 124, 106 } });
        }
    }
}
