using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DAL.Migrations
{
    public partial class QuestionVerticalPoint4 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<short>(
                name: "Index",
                table: "QuestionVerticals",
                type: "smallint",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 200, 119, 20, 27, 252, 74, 14, 91, 57, 104, 120, 24, 165, 211, 39, 190, 159, 106, 224, 204, 150, 143, 151, 231, 2, 205, 248, 219, 29, 79, 117, 134, 197, 174, 22, 22, 33, 105, 118, 4, 245, 207, 194, 194, 62, 177, 164, 186, 38, 231, 250, 64, 104, 152, 112, 195, 120, 198, 122, 107, 202, 170, 130, 97 }, new byte[] { 186, 139, 185, 6, 30, 143, 124, 180, 49, 111, 131, 241, 69, 126, 191, 252, 131, 11, 33, 9, 196, 178, 192, 220, 56, 77, 114, 99, 53, 169, 185, 8, 46, 136, 108, 166, 19, 224, 252, 248, 22, 140, 67, 179, 182, 211, 215, 153, 85, 211, 222, 212, 243, 158, 144, 31, 208, 192, 0, 142, 123, 48, 20, 67, 67, 35, 88, 8, 27, 240, 198, 26, 30, 229, 207, 228, 123, 32, 109, 53, 111, 192, 134, 52, 10, 207, 165, 40, 65, 211, 230, 11, 0, 52, 4, 114, 144, 229, 49, 165, 31, 132, 222, 123, 16, 146, 79, 93, 88, 74, 103, 239, 187, 245, 62, 93, 138, 88, 150, 249, 222, 173, 28, 101, 203, 253, 4, 188 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Index",
                table: "QuestionVerticals");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 174, 111, 237, 217, 236, 164, 31, 238, 69, 250, 110, 81, 234, 1, 26, 154, 65, 32, 16, 178, 236, 199, 41, 230, 52, 99, 39, 30, 11, 200, 23, 193, 77, 242, 45, 158, 205, 95, 149, 171, 100, 28, 24, 35, 204, 48, 27, 226, 16, 86, 85, 184, 76, 187, 163, 186, 251, 253, 13, 162, 145, 226, 161, 47 }, new byte[] { 204, 88, 110, 254, 192, 210, 115, 29, 231, 157, 42, 240, 202, 107, 34, 72, 179, 224, 19, 212, 121, 55, 2, 244, 143, 227, 115, 113, 201, 48, 56, 145, 237, 203, 120, 240, 206, 223, 41, 55, 53, 114, 70, 244, 120, 83, 61, 67, 174, 232, 17, 201, 224, 150, 7, 234, 227, 242, 125, 137, 126, 170, 31, 75, 53, 153, 47, 117, 165, 24, 157, 170, 172, 222, 121, 12, 65, 49, 223, 153, 106, 22, 193, 43, 64, 240, 180, 31, 191, 219, 224, 242, 150, 144, 23, 237, 187, 198, 150, 127, 216, 244, 93, 29, 15, 48, 34, 211, 158, 119, 230, 246, 125, 0, 231, 22, 34, 3, 11, 152, 241, 145, 249, 102, 236, 65, 231, 34 } });
        }
    }
}
