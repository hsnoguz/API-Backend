using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DAL.Migrations
{
    public partial class RefreshToken27 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "RefreshTokenId",
                table: "Users",
                type: "int",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 6, 106, 133, 64, 151, 126, 228, 105, 9, 165, 129, 147, 15, 233, 5, 198, 106, 21, 122, 169, 14, 42, 61, 242, 171, 15, 213, 146, 20, 63, 138, 135, 9, 22, 17, 82, 102, 22, 228, 170, 17, 25, 162, 110, 130, 73, 104, 157, 144, 46, 156, 221, 99, 214, 101, 137, 80, 142, 217, 47, 136, 79, 124, 231 }, new byte[] { 19, 13, 230, 240, 147, 117, 239, 2, 66, 249, 137, 148, 72, 231, 44, 112, 184, 233, 99, 39, 143, 179, 9, 237, 41, 176, 31, 25, 231, 90, 149, 116, 90, 93, 54, 56, 196, 192, 51, 39, 224, 183, 68, 70, 47, 233, 160, 137, 153, 55, 67, 150, 128, 246, 141, 165, 153, 112, 190, 254, 125, 76, 49, 227, 169, 116, 250, 221, 155, 152, 32, 153, 58, 69, 101, 135, 88, 53, 19, 153, 58, 24, 209, 207, 156, 173, 219, 37, 154, 220, 119, 215, 190, 158, 0, 41, 54, 182, 246, 250, 167, 170, 182, 158, 140, 8, 146, 62, 183, 236, 76, 197, 80, 225, 196, 215, 100, 28, 70, 205, 53, 255, 159, 48, 235, 40, 244, 196 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "RefreshTokenId",
                table: "Users");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 122, 9, 60, 203, 53, 95, 193, 54, 139, 235, 26, 85, 225, 206, 210, 204, 58, 165, 103, 66, 106, 189, 72, 102, 39, 233, 17, 222, 87, 193, 235, 184, 124, 100, 56, 103, 201, 88, 138, 8, 162, 43, 18, 190, 202, 49, 6, 213, 229, 205, 26, 248, 100, 143, 251, 117, 191, 183, 179, 55, 228, 77, 163, 14 }, new byte[] { 30, 77, 29, 170, 218, 138, 38, 56, 150, 91, 12, 233, 133, 13, 126, 135, 77, 73, 251, 16, 200, 58, 87, 162, 59, 79, 105, 151, 181, 225, 56, 94, 33, 179, 27, 29, 41, 216, 237, 83, 118, 153, 22, 82, 202, 135, 215, 57, 27, 180, 244, 84, 91, 144, 86, 5, 226, 17, 46, 158, 135, 101, 128, 26, 102, 85, 161, 136, 45, 121, 55, 33, 155, 84, 15, 154, 186, 219, 96, 71, 12, 238, 82, 26, 37, 82, 172, 78, 91, 173, 247, 20, 55, 109, 225, 194, 115, 206, 222, 161, 61, 182, 37, 129, 178, 90, 149, 73, 251, 76, 109, 255, 151, 68, 225, 70, 200, 146, 153, 200, 134, 243, 210, 137, 5, 105, 51, 111 } });
        }
    }
}
