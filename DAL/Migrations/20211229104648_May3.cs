using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DAL.Migrations
{
    public partial class May3 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "TargetId",
                table: "Aims",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 139, 24, 205, 172, 211, 0, 49, 103, 49, 72, 42, 195, 173, 143, 240, 10, 217, 17, 47, 66, 58, 220, 106, 223, 226, 161, 77, 189, 84, 239, 89, 168, 205, 240, 44, 154, 27, 220, 241, 45, 244, 113, 144, 60, 114, 244, 5, 204, 53, 242, 167, 123, 179, 63, 213, 52, 0, 212, 100, 59, 17, 179, 223, 0 }, new byte[] { 15, 228, 41, 163, 153, 68, 95, 74, 204, 101, 94, 184, 225, 128, 230, 48, 175, 105, 200, 205, 55, 199, 115, 92, 184, 33, 83, 144, 209, 123, 65, 199, 113, 24, 133, 128, 152, 177, 238, 15, 164, 125, 90, 33, 139, 145, 129, 59, 161, 232, 244, 13, 2, 209, 252, 181, 230, 125, 189, 194, 37, 243, 14, 120, 205, 69, 197, 39, 165, 244, 255, 223, 16, 28, 24, 33, 237, 100, 79, 175, 156, 42, 138, 125, 101, 159, 173, 236, 26, 243, 220, 176, 214, 255, 97, 62, 122, 202, 74, 184, 173, 145, 129, 121, 91, 117, 6, 55, 223, 195, 72, 223, 144, 142, 218, 235, 39, 101, 222, 208, 88, 132, 65, 97, 139, 50, 0, 246 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "TargetId",
                table: "Aims");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 51, 82, 189, 137, 254, 146, 153, 136, 94, 242, 115, 197, 73, 95, 111, 76, 54, 10, 196, 77, 98, 142, 243, 80, 234, 86, 41, 102, 141, 208, 9, 219, 68, 177, 35, 88, 3, 62, 118, 68, 226, 153, 120, 47, 184, 134, 28, 19, 2, 124, 146, 101, 160, 79, 241, 239, 213, 63, 72, 99, 87, 232, 232, 162 }, new byte[] { 90, 126, 60, 240, 131, 78, 5, 135, 204, 133, 93, 21, 174, 222, 145, 187, 66, 191, 143, 117, 204, 247, 110, 211, 176, 129, 174, 181, 98, 49, 205, 231, 83, 126, 50, 37, 71, 196, 51, 215, 203, 11, 36, 62, 76, 15, 238, 177, 255, 166, 229, 218, 84, 0, 71, 101, 251, 144, 226, 139, 117, 238, 234, 34, 11, 213, 141, 232, 185, 68, 242, 121, 183, 156, 127, 255, 19, 254, 36, 50, 46, 246, 134, 70, 106, 95, 116, 188, 29, 234, 52, 31, 207, 173, 134, 62, 155, 164, 17, 54, 49, 125, 70, 116, 166, 119, 170, 204, 21, 18, 164, 1, 82, 65, 229, 249, 101, 99, 114, 240, 148, 154, 164, 239, 72, 239, 68, 150 } });
        }
    }
}
